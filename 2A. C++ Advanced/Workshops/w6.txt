Script started on Fri 24 Mar 2017 01:01:53 PM EDT
amesasuarez@matrix:~> whoami
amesasuarez
amesasuarez@matrix:~> cd OOP345/w6
amesasuarez@matrix:~/OOP345/w6> cat w6.cpp Grades.h
/*
OOP345
Workshop 6
Title    : Lambda Expressions
Date     : 03/21/17
Author   : Alejandro Mesa
Student# : 038515151
Email    : amesasuarez@myseneca.ca
*/

 // Workshop 6 - Lambda Expression
 // w6.cpp

 #include <iostream>
 #include "Grades.h"

 int main(int argc, char* argv[]) {
     if (argc != 2) {
         std::cerr << argv[0] <<
          ": incorrect number of arguments\n";
         std::cerr << "Usage: " << argv[0] << " file_name\n";
         return 1;
     }


         Grades grades(argv[1]);
         // define the lambda expression for letter
         auto letter = [](double mark) -> std::string{
		std::string letterGrade;
		if (mark >= 90){
			letterGrade = "A+";
		}else if (mark >= 80){
			letterGrade = "A";
		}else if (mark >= 75){
			letterGrade = "B+";
		}else if (mark >= 70){
			letterGrade = "B";
		}else if (mark >= 65){
			letterGrade = "C+";
		}else if (mark >= 60){
			letterGrade = "C";
		}else if (mark >= 55){
			letterGrade = "D+";
		}else if (mark >= 50){
			letterGrade = "D";
		else{
			letterGrade = "F";
		}
		return letterGrade;
	};

         grades.displayGrades(std::cout, letter);

     std::cout << "Press any key to continue ... ";
     std::cin.get();
 }
/*
OOP345
Workshop 6
Title    : Lambda Expressions
Date     : 03/21/17
Author   : Alejandro Mesa
Student# : 038515151
Email    : amesasuarez@myseneca.ca
*/

#pragma once
#include <iostream>
#include <string>
#include <fstream>
using namespace std;

class Grades{
	std::string* studentID;
	double* marks;
	int counter;


public:
	Grades() :studentID(nullptr), marks(nullptr), counter(0){

	}

	Grades(char* fileName){
			std::ifstream file(fileName);
			if (file.is_open()==true){
				std::string temporal;
				int count = 0;

                //Count records's numbers
				while (getline(file, temporal)){
					count++;
				}
                //Reset file and goes to the beginning
				file.clear();
				file.seekg(0);
				counter = count;
				studentID = new std::string[counter];
				marks = new double[counter];

				for (int i = 0; i < counter; i++){
                		file >> studentID[i];
                		file >> marks[i];
				}
				file.close();
			}
			else {
				std::cerr << "File is missing!";
			}

	}
	//Destructor
	~Grades(){
		delete[] studentID;
		delete[] marks;
	}
	//Template
	template<typename Func>
	void displayGrades(std::ostream& os, Func letterMark) const{
		for (int i = 0; i < counter; i++){
			os << studentID[i] << " " << marks[i] << " " << letterMark(marks[i]) << std::endl;
		}
	}

};
amesasuarez@matrix:~/OOP345/w6> g++ -std="c++0x" -o w6 w6.cpp
amesasuarez@matrix:~/OOP345/w6> w6 w6.dat
1022342 67.4 C+
1024567 73.5 B
2031456 79.3 B+
6032144 53.5 D
1053250 92.1 A+
3026721 86.5 A
7420134 62.3 C
9762314 58.7 D+
6521045 34.6 F
Press any key to continue ... 
amesasuarez@matrix:~/OOP345/w6> exit
exit

Script done on Fri 24 Mar 2017 01:03:10 PM EDT
