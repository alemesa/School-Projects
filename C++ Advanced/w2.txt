Script started on Sat 04 Mar 2017 10:07:26 PM EST
amesasuarez@matrix:~/OOP345/w2> whoami
amesasuarez
amesasuarez@matrix:~/OOP345/w2> cat Station.h Station.cpp Stations.h Stations.c pp
/*
OOP345
Workshop 2
Title    : Compound Types
Date     : 03/01/17
Author   : Alejandro Mesa
Student# : 038515151
Email    : amesasuarez@myseneca.ca
*/

#pragma once
#include <string>
#include <fstream>

using namespace std;

namespace w2 {

  enum PassType {
    STUDENT_PASS,
    ADULT_PASS,
    PASS_COUNT
  };

  class Station {

    private:

    string _stationName;
    int passes[PASS_COUNT];

    public:

    Station();
    void set(const string & stationName, unsigned studentPass, unsigned adultPass);
    unsigned inStock(PassType) const;
    void update(PassType pt, int qty);
    const string & getName() const;
    ~Station();

  };

}
/*
OOP345
Workshop 2
Title    : Compound Types
Date     : 03/01/17
Author   : Alejandro Mesa
Student# : 038515151
Email    : amesasuarez@myseneca.ca
*/

#include <iostream>
#include <string>
#include <fstream>

#include "Station.h"

using namespace std;

namespace w2 {

  Station::Station() {

    _stationName = "";
    passes[STUDENT_PASS] = 0;
    passes[ADULT_PASS] = 0;
  }

  void Station::set(const string & stationName, unsigned studentPass, unsigned adultPass) {

    _stationName = stationName;
    passes[STUDENT_PASS] = studentPass;
    passes[ADULT_PASS] = adultPass;
  }

  void Station::update(PassType pt, int qty) {

    passes[pt] = passes[pt] + qty;
  }

  unsigned Station::inStock(PassType pt) const {

    return passes[pt];

  }

  const string & Station::getName() const {

    return _stationName;

  }

  Station::~Station() {
  }

}
/*
OOP345
Workshop 2
Title    : Compound Types
Date     : 03/01/17
Author   : Alejandro Mesa
Student# : 038515151
Email    : amesasuarez@myseneca.ca
*/

#pragma once
#include <string>
#include <fstream>

#include "Station.h"

using namespace std;

namespace w2 {

    class Stations{

    private:

        char* _filename;
        int stacount;
		string name;
        Station* stationActual;

    public:

        Stations(char* filename);
		~Stations();
        void update() const;
        void restock() const;
        void report() const;
       };
}
/*
OOP345
Workshop 2
Title    : Compound Types
Date     : 03/01/17
Author   : Alejandro Mesa
Student# : 038515151
Email    : amesasuarez@myseneca.ca
*/

#include <iostream>
#include <fstream>
#include <cctype>
#include <iomanip>
#include <string>

#include "Stations.h"
#include "Station.h"

using namespace std;

namespace w2 {

  Stations::Stations(char * filename) {

    fstream is(filename);

    //is.open(filename, ios::in);

    if (is.is_open()==false) {

      cerr << "Not possible to open the file: " << filename << endl;

    }
    string line;

    is >> stacount;

    is.ignore(2, ';');

    cout << "Station Count = " << stacount << endl;


    string stationName;
    stationActual = new Station[stacount];

    unsigned stupass = 0, adultpass = 0;

    for (size_t i = 0; i < stacount; i++) {

      getline(is, stationName, ';');
      is >> stupass;
      is >> adultpass;

      stationActual[i].set(stationName, stupass, adultpass);
    }

    is.close();
  }

  void Stations::update() const {

    cout << "Passes Sold :" << endl << "-------------";
    for (int i = 0; i < stacount; i++) {
      int student, adult;
      cout << stationActual[i].getName();
      cout << endl;
      cout << "Student Passes sold : ";
      cin >> student;
      cout << "Adult   Passes sold : ";
      cin >> adult;

      stationActual[i].update(STUDENT_PASS, -student);
      stationActual[i].update(ADULT_PASS, -adult);
    }

  }
  void Stations::restock() const {

    cout << "Passes Added :" << endl << "--------------" << endl;

    for (int i = 0; i < stacount; i++) {

      int s, a;

      cout << stationActual[i].getName() << endl;
      cout << "Student Passes added : ";
      cin >> s;
      cout << "Adult   Passes added : ";
      cin >> a;
      stationActual[i].update(STUDENT_PASS, s);
      stationActual[i].update(ADULT_PASS, a);
    }
  }
  void Stations::report() const {

    cout << "Passes in Stock : Student Adult" << endl;
    cout << "-------------------------------" << endl;

    for (int i = 0; i < stacount; i++) {

      cout << left << setw(19) << stationActual[i].getName()
      << setw(6) << stationActual[i].inStock(STUDENT_PASS)
      << setw(6) << stationActual[i].inStock(ADULT_PASS)
      << endl;
    }
  }

  Stations::~Stations() {

    if (stationActual) {
      delete[] stationActual;
    }
  }

}
amesasuarez@matrix:~/OOP345/w2> g++ -o w2 w2.cpp Station.cpp Stations.cpp
amesasuarez@matrix:~/OOP345/w2> w2 Stations.dat

Command Line : w2 Stations.dat 
Station Count = 4
Passes Sold :
-------------
Spadina
Student Passes sold : 5
Adult   Passes sold : 8

Bathurst
Student Passes sold : 34
Adult   Passes sold : 52

Keele
Student Passes sold : 21
Adult   Passes sold : 13

Bay
Student Passes sold : 67
Adult   Passes sold : 65
Passes Added :
--------------

Spadina
Student Passes added : 29
Adult   Passes added : 52

Bathurst
Student Passes added : 113
Adult   Passes added : 61

Keele
Student Passes added : 51
Adult   Passes added : 52

Bay
Student Passes added : 109
Adult   Passes added : 107
Passes in Stock : Student Adult
-------------------------------

Spadina           100   200   

Bathurst          200   300   

Keele             100   100   

Bay               200   200   
amesasuarez@matrix:~/OOP345/w2> exit
exit

Script done on Sat 04 Mar 2017 10:08:55 PM EST
